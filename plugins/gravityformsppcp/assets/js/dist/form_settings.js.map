{"version":3,"file":"form_settings.js","mappings":"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","sources":["webpack://gform-ppcp/../../../assets/js/src/legacy/utilities.js","webpack://gform-ppcp/webpack/bootstrap","webpack://gform-ppcp/webpack/runtime/compat get default export","webpack://gform-ppcp/webpack/runtime/define property getters","webpack://gform-ppcp/webpack/runtime/hasOwnProperty shorthand","webpack://gform-ppcp/../../../assets/js/src/legacy/form_settings.js"],"sourcesContent":["/* eslint-disable */\n\n/**\n * This file contains a collection of utility methods intended to be usable across the GF PayPal Checkout JS add-on.\n *\n * @param  $\n */\n( function( $ ) {\n\tconst GFPayPalCheckoutUtils = {\n\t\tsubscriptions: {\n\t\t\tgetNoticeContainer: () => {\n\t\t\t\treturn $( '#gf-paypal-checkout-unsupported-payment-warning' );\n\t\t\t},\n\n\t\t\tgetUnsupportedPaymentMethodMarkup: ( legacy = false, message ) => {\n\t\t\t\tif ( ! message ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet messageMarkup = `\t\t\t\t\t\t\n\t\t\t\t\t<div id=\"gf-paypal-checkout-unsupported-payment-warning\" class=\"gform-alert gform-alert--notice gform-alert--inline\" data-js=\"gform-alert\">\n\t\t\t\t\t\t<span class=\"gform-alert__icon gform-icon gform-icon--circle-notice\" aria-hidden=\"true\"></span>\n\t\t\t\t\t\t<div class=\"gform-alert__message-wrap\">\n\t\t\t\t\t\t\t<p class=\"gform-alert__message\">${ message }</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\n\t\t\t\tif ( legacy ) {\n\t\t\t\t\tmessageMarkup = `\t\t\t\t\t\t\n\t\t\t\t\t\t<div id=\"gf-paypal-checkout-unsupported-payment-warning\" class=\"gform-settings__wrapper gform-alert__legacy\">\n\t\t\t\t\t\t\t<div class=\"alert gforms_note_warning alert_yellow\">\n\t\t\t\t\t\t\t\t<p>${ message }</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`;\n\t\t\t\t}\n\n\t\t\t\treturn messageMarkup;\n\t\t\t},\n\t\t},\n\t};\n\n\twindow.GFPayPalCheckoutUtils = GFPayPalCheckoutUtils;\n}( jQuery ) );\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/* eslint-disable */\nimport './utilities';\n\nwindow.GFPPCPFeedSettings = null;\n\n( function( $, strings ) {\n\tconst formData = strings.form_data[ Object.keys( strings.form_data )[ 0 ] ];\n\n\twindow.GFPPCPFeedSettings = {\n\t\tisLegacy: strings.is_legacy === 'true',\n\t\tshowNotice: formData.show_notice === 'true',\n\n\t\tinit() {\n\t\t\tthis.prefix = this.isLegacy ? 'gaddon' : 'gform';\n\t\t\tthis.fieldClassPrefix = this.isLegacy ? `gaddon-setting-row-` : `gform_setting_`;\n\t\t\tthis.fields = this.getFieldCache();\n\t\t\tthis.utils = window.GFPayPalCheckoutUtils;\n\n\t\t\tthis.addEventListeners();\n\t\t\tthis.toggleTrialFields();\n\t\t\tthis.maybeDisplayInvalidPaymentMethodsNotice();\n\t\t},\n\n\t\taddEventListeners() {\n\t\t\tconst feedSettings = window.GFPPCPFeedSettings;\n\n\t\t\tthis.fields.setupFeeEnabled.on( 'change', function() {\n\t\t\t\tfeedSettings.toggleTrialFields();\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Get the jQuery cache of field objects.\n\t\t *\n\t\t * @return {object} The field cache.\n\t\t */\n\t\tgetFieldCache() {\n\t\t\tconst fields = {\n\t\t\t\ttransactionType: $( `#transactionType` ),\n\t\t\t\tenabled: $( `#trial_enabled` ),\n\t\t\t\trecurringAmount: $( `#recurringAmount` ),\n\t\t\t\tprice: $( `#${ this.fieldClassPrefix }trialPrice` ),\n\t\t\t\tperiod: $( `#${ this.fieldClassPrefix }trialPeriod` ),\n\t\t\t\tproduct: $( `#trialPrice_product` ),\n\t\t\t\tamount: $( `#trialPrice_amount` ),\n\t\t\t\tbillingCycleUnit: $( `#billingCycle_unit` ),\n\t\t\t\tsetupFeeEnabled: $( `#setupfee_enabled` ),\n\t\t\t};\n\n\t\t\tfields.periodUnit = fields.period.find( `#trialPeriod_unit` );\n\t\t\tfields.priceOptions = fields.product.find( 'option' );\n\n\t\t\treturn fields;\n\t\t},\n\n\t\t/**\n\t\t * Handle the toggling of trial fields.\n\t\t */\n\t\ttoggleTrialFields() {\n\t\t\tconst priceFieldValue = this.fields.product.val();\n\n\t\t\tif ( this.fields.setupFeeEnabled.prop( 'checked' ) ) {\n\t\t\t\tthis.fields.enabled.prop( 'checked', false );\n\t\t\t}\n\n\t\t\tif ( this.fields.enabled.prop( 'checked' ) ) {\n\t\t\t\tthis.initTrialFields();\n\t\t\t} else {\n\t\t\t\tthis.fields.price.hide();\n\t\t\t\tthis.fields.period.hide();\n\t\t\t}\n\n\t\t\tswitch ( priceFieldValue ) {\n\t\t\t\tcase 'enter_amount':\n\t\t\t\t\tthis.fields.amount.show();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.fields.amount.hide();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Show all of the trial fields when the trial is enabled.\n\t\t */\n\t\tinitTrialFields() {\n\t\t\tthis.fields.price.show();\n\t\t\tthis.fields.period.show();\n\t\t\tthis.fields.product.show();\n\t\t},\n\n\t\t/**\n\t\t * Show the amount field if that option was selected among the trial price options..\n\t\t */\n\t\tmaybeShowAmountField() {\n\t\t\tif ( this.fields.price.find( 'option:selected' ).val() === 'enter_amount' ) {\n\t\t\t\tthis.fields.amount.show();\n\t\t\t} else {\n\t\t\t\tthis.fields.amount.hide();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Exclude the product from the trial price dropdown if it is currently selected in the recurring amount field.\n\t\t *\n\t\t * Resets the trial price input to the free trial value if the trial price is set to a product and the\n\t\t * admin subsequently selects the product as the recurring amount.\n\t\t */\n\t\tupdateTrialPriceOptions() {\n\t\t\tconst recurringPrice = this.fields.recurringAmount.find( 'option:selected' ).val();\n\t\t\tconst trialProduct = this.fields.product.find( `option[value=\"${ recurringPrice }\"]` );\n\n\t\t\tthis.fields.priceOptions.show();\n\n\t\t\tif ( ! trialProduct.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttrialProduct.hide();\n\n\t\t\tif ( this.fields.product.find( `option:selected` ).val() === recurringPrice ) {\n\t\t\t\tthis.fields.product.val( 'free_trial' );\n\t\t\t}\n\t\t},\n\n\t\tmaybeDisplayInvalidPaymentMethodsNotice() {\n\t\t\tconst container = this.fields.transactionType.closest( 'div' );\n\n\t\t\tif ( this.fields.transactionType.val() === 'subscription' && this.showNotice ) {\n\t\t\t\tcontainer.append( this.utils.subscriptions.getUnsupportedPaymentMethodMarkup( this.isLegacy, gform_ppcp_form_settings_strings.unsupported_payment_option_message ) );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontainer.find( '#gf-paypal-checkout-unsupported-payment-warning' ).remove();\n\t\t},\n\t};\n\n\t$( document ).ready( function() {\n\t\twindow.GFPPCPFeedSettings.init();\n\t} );\n}( jQuery, gform_ppcp_form_settings_strings ) );\n"],"names":["$","GFPayPalCheckoutUtils","jQuery","subscriptions","getNoticeContainer","getUnsupportedPaymentMethodMarkup","legacy","message","messageMarkup","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","strings","formData","GFPPCPFeedSettings","gform_ppcp_form_settings_strings","form_data","keys","isLegacy","is_legacy","showNotice","show_notice","init","this","prefix","fieldClassPrefix","fields","getFieldCache","utils","addEventListeners","toggleTrialFields","maybeDisplayInvalidPaymentMethodsNotice","feedSettings","setupFeeEnabled","on","transactionType","enabled","recurringAmount","price","period","product","amount","billingCycleUnit","periodUnit","find","priceOptions","priceFieldValue","val","initTrialFields","hide","show","maybeShowAmountField","updateTrialPriceOptions","recurringPrice","trialProduct","length","container","closest","append","unsupported_payment_option_message","remove","document","ready"],"sourceRoot":""}